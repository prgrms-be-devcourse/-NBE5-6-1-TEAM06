<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.grepp.spring.app.model.cart.CartRepository">

  <resultMap id="cartProductMap" type="CartProduct">
    <result property="cartDetailsId" column="cart_details_id"/>
    <result property="cartId" column="cart_id"/>
    <result property="productId" column="product_id"/>
    <result property="productCnt" column="product_cnt"/>

    <result property="userId" column="user_id"/>

    <result property="productName" column="product_name"/>
    <result property="productPrice" column="price"/>
    <result property="category" column="category"/>
  </resultMap>

  <select id="findCartWithProductByUserId" resultMap="cartProductMap">

    SELECT
    cd.cart_details_id,
    c.cart_id,
    c.user_id,
    cd.product_id,
    cd.product_cnt,
    p.product_name,
    p.price
    FROM cart c
    JOIN cart_details cd ON c.cart_id = cd.cart_id
    JOIN product p ON cd.product_id = p.product_id
    WHERE c.user_id = #{userId}
  </select>

  <update id="modifyProductCnt">
    UPDATE cart_details
    SET product_cnt = #{productCnt}
    where cart_details_id = #{cartDetailsId}
  </update>

  <delete id="delete">
    DELETE from cart_details
    WHERE cart_details_id = #{cartDetailsId}
  </delete>

  <select id="orderCartList" resultMap="cartProductMap">
    SELECT m.user_name, p.product_name, p.price, cd.product_cnt
    FROM cart_details cd
    join product p on p.product_id = cd.product_id
    join cart c on c.cart_id = cd.cart_id
    join member m on m.user_id = c.user_id
    WHERE cd.cart_details_id = #{cartDetailsId}
  </select>

  <insert id="addOrderDetails" parameterType="long">
    INSERT INTO `order_details` (
    `order_id`,
    `product_id`,
    `product_name`,
    `product_code`,
    `category`,
    `order_cnt`,
    `quantity`,
    `product_price`,
    `unit_price`,
    `total_price`
    )
    SELECT
    o.order_id,
    p.product_id,
    p.product_name,
    1,
    p.category,
    cd.product_cnt,
    cd.product_cnt,
    p.price,
    p.price,
    p.price * cd.product_cnt
    FROM cart_details cd
    JOIN cart c ON cd.cart_id = c.cart_id
    JOIN product p ON cd.product_id = p.product_id
    JOIN `order` o ON o.user_id = c.user_id
    WHERE cd.cart_details_id = #{cartDetailsId}
    AND o.ordered_at = (
    SELECT MAX(ordered_at)
    FROM `order`
    WHERE user_id = c.user_id
    );
  </insert>


  <insert id="order" parameterType="map">
    INSERT INTO `order` (
    `user_id`,
    `user_name`,
    `ordered_at`,
    `expected_delivery_date`,
    `address`,
    `post_number`,
    `total_price`,
    `activated`,
    `order_status`
    )
    SELECT
    c.user_id,
    m.user_name,
    NOW(),
    CASE
    WHEN NOW() BETWEEN DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 DAY)
    AND DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 HOUR)
    THEN CURDATE() + INTERVAL 2 DAY
    ELSE CURDATE() + INTERVAL 3 DAY
    END AS expected_delivery_date,
    #{address},
    #{postNumber},
    SUM(p.price * cd.product_cnt),
    1,
    'ORDER_COMPLETE'
    FROM cart c
    JOIN cart_details cd ON cd.cart_id = c.cart_id
    JOIN product p ON p.product_id = cd.product_id
    JOIN member m ON m.user_id = c.user_id
    WHERE cd.cart_details_id = #{cartDetailsId}
    GROUP BY c.user_id;
  </insert>


  <!--  <insert id="order">-->
  <!--    INSERT INTO `order` (-->
  <!--    `user_id`,-->
  <!--    `user_name`-->
  <!--    `ordered_at`,-->
  <!--    `expected_delivery_date`,-->
  <!--    `address`,-->
  <!--    `post_number`,-->
  <!--    `total_price`,-->
  <!--    `activated`,-->
  <!--    `order_status`-->
  <!--    )-->
  <!--    SELECT-->
  <!--    c.user_id,-->
  <!--    NOW(),-->
  <!--    CASE-->
  <!--    WHEN NOW() BETWEEN DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 1 DAY) AND DATE_SUB(CURRENT_TIMESTAMP,-->
  <!--    INTERVAL 1 HOUR) THEN CURDATE() + INTERVAL 2 DAY-->
  <!--    ELSE CURDATE() + INTERVAL 3 DAY-->
  <!--    END AS expected_delivery_date,-->
  <!--    #{address},-->
  <!--    #{postNumber},-->
  <!--    SUM(p.price * cd.product_cnt),-->
  <!--    TRUE,-->
  <!--    SUM(cd.product_cnt)-->
  <!--    FROM-->
  <!--    cart c-->
  <!--    JOIN-->
  <!--    cart_details cd ON cd.cart_id = c.cart_id-->
  <!--    JOIN-->
  <!--    product p ON p.product_id = cd.product_id-->
  <!--    WHERE-->
  <!--    cd.cart_details_id = #{cartDetailsId};-->
  <!--  </insert>-->

  <insert id="insertCartItem">
    INSERT INTO cart_details (cart_id, product_id, product_cnt, created_at)
    VALUES (#{cartId}, #{productId}, #{quantity}, NOW())
  </insert>

  <insert id="createCart">
    INSERT INTO cart (user_id)
    VALUES (#{userId})
  </insert>

  <select id="findCartIdByUserId" resultType="long">
    SELECT cart_id
    FROM cart
    WHERE user_id = #{userId}
  </select>


</mapper>